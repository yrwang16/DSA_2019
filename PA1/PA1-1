THU2019 1-1 Team

描述
　　教练员 A、B 和 C 将要从编号为1到n的队员中挑选自己的队员。为公平起见，每个教练都根据自己的喜好程度将队员排序；你负责根据以下规则为他们分配队员。

　　你拿到的数据是 a、b、c 三个数组，表示三个教练对队员的喜好程度排序，每个数组都是数字 1 到 n 的一个排列，下标越小表示教练越喜欢该队员（例如教练 A 最喜欢编号为 a[0] 的队员，其次是编号为 a[1] 的队员）。你的分组规则是，从还未被分配的队员中找一个教练A最喜欢的队员分到 A 组；然后，在未分配的队员中分配教练B最喜欢的队员到 B 组；然后是教练 C；再是教练 A、B......依次类推直到所有队员分配完毕。

　　现在队员 k 希望知道自己被分配给哪位教练，请你来告诉他。

输入
　　共 5 行。

　　第 1 行包含一个整数 n。

　　第 2 至 4 行依次是数组 a、b 和 c，每行都是整数 [1, n] 的一个排列。

　　第 5 行包含一个整数 k。

输出
　　仅一个字符，A、B 或 C，表示队员 k 被分配给哪位教练。
  
输入样例 1
3
1 2 3 
1 2 3 
1 2 3 
3
输出样例 1
C

输入样例 2
5
1 2 3 4 5 
1 3 5 4 2 
5 4 3 2 1 
4
输出样例 2
B

限制
1 <= n <= 500,000

1 <= k <= n

时间：0.6 sec

空间：256 MB

提示

　　● 大体上，1 sec内，O(n)的算法可以通过 n = 10,000,000 规模的数据，O(nlogn) 通过 500,000 规模，O(n^2) 通过 5,000 规模。

　　● 本题等一些复杂度是 O(n) 的题目受限于 scanf(“%d”, ...) 的读入速度，但又不希望通过读取二进制文件等不直观的方式增加同学们的负担。

　　● “懒删除”策略：从序列中移除一个元素时，可以只标记它，下次读取时跳过它，而不需要将它后面的元素都向前挪一位。思考如何做标记，能在每个教练员选队员时，快速地知道该队员是否已被选走。

　　Tips：清零或赋值时，memset 比手动赋值快几倍。输入数据时，有时 scanf 比 cin 快一些。
